*Exercise 1.15:* The sine of an angle (specified in radians) can
be computed by making use of the approximation `sin' xapprox x if
x is sufficiently small, and the trigonometric identity

\[
   \sin(x) = 3\sin(x/3) - 4\sin^3(x/3)
\]

to reduce the size of the argument of `sin'.  (For purposes of this
exercise an angle is considered "sufficiently small" if its
magnitude is not greater than 0.1 radians.) These ideas are
incorporated in the following procedures:

When counting, I am going to cheat a bit and use a call to ~set!~, but
it is a trivial exercise to modify the ~sine~ procedure to increment a
counter.

#+begin_src scheme
  (define (cube x) (* x x x))

  (define count-p 0)
  (define (p x)
    (set! count-p (+ count-p 1))
    (- (* 3 x) (* 4 (cube x))))

  (define (sine angle)
    (if (not (> (abs angle) 0.1))
	angle
	(p (sine (/ angle 3.0)))))

  (sine 12.15)
  count-p
#+end_src

#+RESULTS:
: 5

a. How many times is the procedure `p' applied when `(sine 12.15)' is
   evaluated? Answer: 5 times.

b. What is the order of growth in space and number of steps (as a
   function of a) used by the process generated by the `sine'
   procedure when `(sine a)' is evaluated? Answer: it looks like this
   is on the order of $\log_3(n)$ for both time and space.
